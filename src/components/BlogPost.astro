---
import { format } from 'date-fns'

export interface Props {
	title: string
	seriesTitle?: string
	author?: string
	pubDate: string
	modDate?: string
	heroImage: string
	description: string
	permalink?: string
	alt?: string
	disqusIdentifier?: string
	disqusCanonical?: string
	lang?: string
	tags?: string[]
}

const { seriesTitle, title, pubDate, modDate, heroImage, alt } = Astro.props

const published = new Date(pubDate)
const modified = new Date(modDate ?? pubDate)
const datePublished = format(published, 'PPP')
const dateModified = format(modified, 'PPP')
---

<div class="layout">
	<article class="content">
		<header>
			{heroImage && <img width="720" height="420" class="hero-image" loading="lazy" src={heroImage} alt={alt} />}
			<hgroup>
				{seriesTitle && <strong class="maintitle">{seriesTitle}</strong>}
				<h1 class="title">{title}</h1>
				<p class="publish-date">
					Page published on <time datetime={published.toISOString().slice(0, 10)}>{datePublished}</time>
					{
						modDate && (
							<small>
								<br />
								Last modified on{' '}
								<time datetime={modified.toISOString().slice(0, 10)}>{dateModified}</time>
							</small>
						)
					}
				</p>
			</hgroup>
		</header>
		<main id="main">
			<slot />
		</main>
	</article>
</div>

<style>
	.hero-image {
		box-sizing: border-box;
		height: auto;
		object-fit: cover;
		object-position: center;
		margin-bottom: 4rem;
		margin-top: 2rem;
		max-width: 1280px;
		padding: 0 4rem;
		width: calc(100vw - 1.125rem);
	}

	@media (max-width: 50em) {
		.hero-image {
			margin-bottom: 2rem;
			margin-top: 1rem;
			padding: 0 1.5rem;
			width: 100%;
		}
	}

	.content {
		margin-bottom: 8rem;
	}

	header {
		display: flex;
		flex-direction: column;
		margin: 2rem 0;
	}

	.maintitle {
		font-size: 1.25rem;
	}

	.title,
	.maintitle,
	.author,
	.publish-date {
		margin: 0.5rem 0;
	}

	.publish-date {
		font: inherit;
	}
</style>
