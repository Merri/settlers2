---
import { format } from 'date-fns'

import { Props as Post } from '$/components/BlogPost.astro'
import { MarkdownInstance } from 'astro'

export interface Props {
	posts: MarkdownInstance<Post>[]
}

interface ExtendedPost extends MarkdownInstance<Post> {
	date: Date
	published: string
	pubDate: string
	url: string
}

const postsByYear = new Map<string, ExtendedPost[]>()

Astro.props.posts.forEach((post) => {
	const url = (post.url || '').replace(/\/index$/, '')
	const date = new Date(post.frontmatter.pubDate)
	const published = format(date, 'MMM dd')
	const pubDate = format(date, 'yyyy-MM-dd')
	const year = format(date, 'yyyy')

	const item = { ...post, date, pubDate, published, url }
	const yearGroup = postsByYear.get(year)?.push(item)
	if (yearGroup == null) postsByYear.set(year, [item])
})

---

<h2>Post Archive</h2>

{
	Array.from(postsByYear).map(([year, posts]) => (
		<details>
			<summary>Year {year}</summary>
			<div class="accordion">
				<div>
					<ul>
						{posts.map((post) => (
							<li>
								<time datetime={post.frontmatter.pubDate}>{post.published}</time>:{' '}
								<a href={post.url}>{post.frontmatter.title}</a>
							</li>
						))}
					</ul>
				</div>
			</div>
		</details>
	))
}

<style>
	details {
		max-width: unset;
	}
	time {
		font-family: var(--font-mono);
	}
</style>
